{"version":3,"sources":["StepIncrementer.ts","WizardItem.tsx","useWizard.tsx","Step.tsx","Step2.tsx","StepLabels.tsx","StepLabel.tsx","App.tsx","index.tsx"],"names":["StepIncrementer","stepCount","this","incrementStep","bind","WizardItem","next","prev","currentStep","incrementStepCount","props","StepContent","number","Wizard","useState","setCurrentStep","stepIncrementer","changeStep","delta","increment","decrement","Step","data-testid","onClick","val","setVal","disabled","setDisabled","useEffect","htmlFor","id","name","value","onChange","e","target","type","StepLabels","children","className","StepLabel","stepNumber","App","useWizard","steps","label","content","Step2","map","s","step","rootElement","document","getElementById","render"],"mappings":"6MAAaA,EAAb,WAKE,aAAe,yBAJfC,UAAoB,EAKlBC,KAAKC,cAAgBD,KAAKC,cAAcC,KAAKF,MANjD,iDAEE,aACIA,KAAKD,cAHX,KCiBeI,EAdI,SACfC,EACAC,EACAC,EACAC,GAJe,OAKZ,SAACC,GACF,IAAQC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,OAIvB,OADAH,IACID,IAAgBI,EAAe,qCAC5B,kBAACD,EAAD,CAAaL,KAAMA,EAAMC,KAAMA,EAAMC,YAAaA,MCiB9CK,MA3Bf,WACE,MAAsCC,mBAAS,GAA/C,mBAAON,EAAP,KAAoBO,EAApB,KACMC,EAAkB,IAAIhB,EAItBiB,EAAa,SAACC,GAAD,OAAyB,kBAAMH,EAAeG,KAC3DC,EAAYF,GAAW,kBAAMT,EAAc,KAC3CY,EAAYH,GAAW,kBAAMT,EAAc,KAC3CF,EAAO,WACX,QAAIE,GAAeQ,EAAgBf,aACnCkB,IACOX,IAEHD,EAAO,WACX,QAAIC,GAAe,KACnBY,IACOZ,IAET,MAAO,CACLH,WAAYA,EAAWC,EAAMC,EAAMC,GAjBV,WACzBQ,EAAgBb,mBAiBhBG,OACAC,OACAC,gBCfWa,EAViC,SAAC,GAAiC,IAA/Bf,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC7D,OACE,yBAAKc,cAAY,kBACf,4BAAQC,QAAS,kBAAMhB,MAAvB,QACA,6CAAmBC,GACnB,4BAAQe,QAAS,kBAAMjB,MAAvB,UCgBSe,EApBiC,SAAC,GAAiC,IAA/Bf,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC7D,EAAsBM,mBAAS,IAA/B,mBAAOU,EAAP,KAAYC,EAAZ,KACA,EAAgCX,oBAAS,GAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KAIA,OAHAC,qBAAU,WACSD,EAAT,SAARH,KACC,CAACA,IAEF,6BACE,4BAAQD,QAAShB,GAAjB,QACA,2BAAOsB,QAAQ,aAAf,aACA,2BAAOC,GAAG,YAAYC,KAAK,YAAYC,MAAOR,EAAKS,SAAU,SAACC,GAAD,OAAOT,EAAOS,EAAEC,OAAOH,UACpF,4BAAQN,SAAUA,EAAUU,KAAK,SAASb,QAASjB,GAAnD,QAGA,6CAAmBE,GACV,SAARgB,GAAkB,4ECZVa,EAJ2C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3D,OAAO,yBAAKC,UAAU,kBAAkBD,ICO3BE,EARG,SAAC,GAAuC,IAArCT,EAAoC,EAApCA,KAAMU,EAA8B,EAA9BA,WAAYjC,EAAkB,EAAlBA,YACrC,OACE,yBAAK+B,UAAS,UAAKE,IAAejC,EAAc,cAAgB,KAC7DuB,ICIQ,SAASW,IACtB,MAAoCC,IAA5BtC,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,YACdoC,EAAQ,CACZ,CAAEhC,OAAQ,EAAGiC,MAAO,OAAQC,QAASzB,GACrC,CAAET,OAAQ,EAAGiC,MAAO,SAAUC,QAASC,IAEzC,OACE,yBAAKR,UAAU,OACb,iDACA,kBAAC,EAAD,KACGK,EAAMI,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACElB,KAAMkB,EAAEJ,MACRJ,WAAYQ,EAAErC,OACdJ,YAAaA,QAIlBoC,EAAMI,KAAI,SAACE,GAAD,OACT,kBAAC7C,EAAD,CAAYO,OAAQsC,EAAKtC,OAAQD,YAAauC,EAAKJ,cCvB3D,IAAMK,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAACZ,EAAD,MAASS,I","file":"static/js/main.4d5097c7.chunk.js","sourcesContent":["export class StepIncrementer {\n  stepCount: number = 0;\n  incrementStep() {\n    ++this.stepCount;\n  }\n  constructor() {\n    this.incrementStep = this.incrementStep.bind(this);\n  }\n}\n","import React from \"react\"\nimport { WizardItemStepArgs } from \"./types\"\n\nconst WizardItem = (\n    next: () => number | false,\n    prev: () => number | false,\n    currentStep: number,\n    incrementStepCount: () => void\n  ) => (props: WizardItemStepArgs) => {\n      const { StepContent, number } = props\n    // register this step to the wizard\n    // by incrementing the stepcount\n    incrementStepCount();\n    if (currentStep !== number) return <></>;\n    return <StepContent next={next} prev={prev} currentStep={currentStep} />;\n};\n\nexport default WizardItem;","import React, { useState } from \"react\";\nimport { StepIncrementer } from \"./StepIncrementer\";\nimport WizardItem from \"./WizardItem\";\n\nfunction Wizard() {\n  const [currentStep, setCurrentStep] = useState(1);\n  const stepIncrementer = new StepIncrementer();\n  const incrementStepCount = () => {\n    stepIncrementer.incrementStep();\n  };\n  const changeStep = (delta: () => number) => () => setCurrentStep(delta);\n  const increment = changeStep(() => currentStep + 1);\n  const decrement = changeStep(() => currentStep - 1);\n  const next = () => {\n    if (currentStep >= stepIncrementer.stepCount) return false;\n    increment();\n    return currentStep;\n  };\n  const prev = () => {\n    if (currentStep <= 1) return false;\n    decrement();\n    return currentStep;\n  };\n  return {\n    WizardItem: WizardItem(next, prev, currentStep, incrementStepCount),\n    next,\n    prev,\n    currentStep\n  };\n}\n\nexport default Wizard;\n","import React from \"react\";\nimport { StepArgs } from \"./types\";\nconst Step: React.FunctionComponent<StepArgs> = ({ next, prev, currentStep }) => {\n  return (\n    <div data-testid=\"step-component\">\n      <button onClick={() => prev()}>prev</button>\n      <span>currentStep={currentStep}</span>\n      <button onClick={() => next()}>next</button>\n    </div>\n  );\n};\n\nexport default Step;\n","import React, { useState, useEffect } from \"react\";\nimport { StepArgs } from \"./types\";\n\nconst Step: React.FunctionComponent<StepArgs> = ({ next, prev, currentStep }) => {\n  const [val, setVal] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  useEffect(() => {\n    val === \"test\" ? setDisabled(false) : setDisabled(true);\n  }, [val]);\n  return (\n    <div>\n      <button onClick={prev}>prev</button>\n      <label htmlFor=\"challenge\">Challenge</label>\n      <input id=\"challenge\" name=\"challenge\" value={val} onChange={(e) => setVal(e.target.value)} />\n      <button disabled={disabled} type=\"button\" onClick={next}>\n        next\n      </button>\n      <span>currentStep={currentStep}</span>\n      {val !== \"test\" && <p>Enter the word \"test\" into input to proceed</p>}\n    </div>\n  );\n};\n\nexport default Step;\n","import React from \"react\";\n\nconst StepLabels: React.FunctionComponent<{ children }> = ({ children }) => {\n  return <div className=\"flex-container\">{children}</div>;\n};\n\nexport default StepLabels;\n","import React from \"react\";\n\nconst StepLabel = ({ name, stepNumber, currentStep }) => {\n  return (\n    <div className={`${stepNumber === currentStep ? \"active-step\" : \"\"}`}>\n      {name}\n    </div>\n  );\n};\n\nexport default StepLabel;\n","import React from \"react\";\nimport \"./styles.css\";\n\nimport useWizard from \"./useWizard\";\nimport Step from \"./Step\";\nimport Step2 from \"./Step2\";\nimport StepLabels from \"./StepLabels\";\nimport StepLabel from \"./StepLabel\";\n\nexport default function App() {\n  const { WizardItem, currentStep } = useWizard();\n  const steps = [\n    { number: 1, label: \"test\", content: Step },\n    { number: 2, label: \"test 2\", content: Step2 }\n  ];\n  return (\n    <div className=\"App\">\n      <h1>React Hook Wizard</h1>\n      <StepLabels>\n        {steps.map((s) => (\n          <StepLabel\n            name={s.label}\n            stepNumber={s.number}\n            currentStep={currentStep}\n          />\n        ))}\n      </StepLabels>\n      {steps.map((step) => (\n        <WizardItem number={step.number} StepContent={step.content} />\n      ))}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}